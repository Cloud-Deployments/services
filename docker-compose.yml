services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - shared
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  cache:
    image: redis:7.4-alpine
    restart: unless-stopped
    ports:
      - "6380:6379"
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - shared
    volumes:
      - redis_data:/data

  coordinator-service:
    build:
      context: ./coordinator-service
      dockerfile: Dockerfile
    # dev only
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "5001:5001"
      - "4001:4001"
      - "8081:80"
    depends_on:
      - db
      - cache
    networks:
      - shared
    develop:
      watch:
        - action: rebuild
          path: ./coordinator-service/

  #  runner-service:
  #    build:
  #      context: ./runner-service
  #      dockerfile: Dockerfile
  #    ports:
  #      - "5002:5002"
  #    depends_on:
  #      - db
  #      - cache
  #      - coordinator-service
  #    networks:
  #      - shared
  #    environment:
  #      RUNNER_ID: runner-1
  #      RUNNER_TOKEN: runner-1-secret
  #      ORGANIZATION_ID: 123
  #    develop:
  #      watch:
  #        - action: rebuild
  #          path: ./runner-service/

  ubuntu-vm:
    image: ubuntu:24.04
    networks:
      - shared
    ports:
      - "2222:22"
    volumes:
      - ubuntu_vm:/data
    command: bash -c "
      apt-get update &&
      apt-get install -y openssh-server &&
      echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config &&
      echo 'root:root' | chpasswd &&
      mkdir -p /run/sshd &&
      /usr/sbin/sshd -D"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  ubuntu_vm:
    driver: local

networks:
  shared:
    driver: bridge
